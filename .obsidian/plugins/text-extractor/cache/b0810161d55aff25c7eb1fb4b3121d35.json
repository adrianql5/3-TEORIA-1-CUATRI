{"path":"COMDIS/imagenes/Pasted image 20251006114104.png","text":"Figura 7.10. Sintaxis de un sfemplo de un servidor de objeto. 1 import java.rmi.t; 2 import java.rmi.server.t; 3 import java.rmi.registry.Registry; 4 import java.mmi.registry.locateRegistry; 5 import java.net.*; 6 import java.io.*; 7 8 e 9+ Esta clase representa el servidor de un objeto * distribuido de la clase InplEjemplo, que implementa la 1+ interfaz remota InterfazEjemplo. . 3 publlic class ServidorEjemplo { public static void main(string args(]) { 6 String mumPuertoRMI, URLRegistro; 7 eyl 8 // osdigo que permite obtener el valor del nimero de puerto 9 InplEjenplo objExportado = new InplEjemplo(); arrancarRegistro(nunPuertoRMT) ; 1 // registrar el objeto bajo el nombre ‘ejemplo’ 2 URLRegistro = \"mi://localhost:\" + numPuerto + */ejemplo’; 3 Naming. rebind(URLRegistro, objExportado); 4 systen.out..println(*Servidor ejemplo preparado.’); ) 17 tin try catch (Exception excr) { 7 System.out.printl( 8 \"Excepci6n en ServidorEjemplo.main: * + excr); ) 1/ tin cateh } /7 fin main 1 7/ Este método arranca un registro RMI en la méquina //1ocal, si no existe en el nimero de puerto especificado private static void arrancarRegistro (int mmPuertoRMI) 5 throws RemoteException { 6 ey { \" Registry registro = LocateRegistry.getRegistry(numPertoRer); 8 registro.list(); 9 1/ B método anterior lanza una exepcitn 0 /1 81 el registro no existe. 1 ) 2 catoh (RemoteException exc) { 3 /Mo existe w registro vélido en este puerto. 3 System.out println( 5 “EL registro RAI no se puede localizar en el perto: 6 + RuTRortium); 2 Registry registro ~LocateRegistry.createRegistry (numPuertcRI); 8 System.out printin( 5 “Registro RMI creado en el puerto ' + RMIPorthum); ) // fin caton 1) // tin arrancarRegistro 2 ) /1 tin clase","libVersion":"0.5.0","langs":"eng"}